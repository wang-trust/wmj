

内 部



### 异常处理

#### 标准异常总结

- AssertionError        assert产生的错误
- AttributeError        尝试访问未知的对象属性
- EOFError              input()读取到EOF却没有接受任何数据
- FloatingPointError    浮点计算错误
- FileNotFoundError     文件找不到
- GeneratorExit         generator.close()方法被调用时
- ImportError           导入模块失败
- IndexError            索引超出序列
- KeyError              字典中查找一个不存在的关键字
- KeyboardInterrupt     用户Ctrl+C
- MemoryError           内存溢出
- NameError             尝试访问一个不存在的变量
- NotImplementedError   尚未实现的方法
- OSError               操作系统产生的异常，如打开不存在的文件
- OverflowError         数值运算超出最大限制
- ReferenceError        弱引用试图访问一个已经被回收的对象
- RuntimeError          一般的运行时错误
- StopIteration         迭代器迭代结束
- SyntaxError           Python的语法错误
- IndentationError      缩进错误
- TabError              tab和空格混用
- SystemError           Python编译系统错误
- SystemExit            Python编译器进程被关闭
- TypeError             不同类型间的无效操作
- UnboundLocalError     访问一个未初始化的本地变量（NameError的子类
- UnicodeError          Unicode相关错误（ValueError的子类）
- UnicodeEncodeError    Unicode编码错误（UnicodeError的子类）
- UnicodeDecodeError    Unicode解码错误（UnicodeError的子类）
- UnicodeTranslateError Unicode转换时错误（UnicodeError的子类）
- ValueError            传入无效的参数
- ZeroDivisionError     除数为0

#### 相关语法

- `assert 条件`: 条件为假时抛出异常
- `raise UnicodeError` 直接抛出指定类型的异常
- try语法

```python
try:
  pass
# exception是错误类型，不写捕获全部，写的话捕获指定类型错误
# 可以写多个判断
except [Exception as reason]:
  pass
except [(IndexError,ConnectionResetError) as reason]:
  pass
# 用() 同时捕获多个异常
except (,,)
  pass
```

- try finally语句

```python
try:
  pass
except Exception [as reason]:
  pass
finally
  # 无论是否有异常都会执行
  pass
```
  
## 类和对象

面向对象的特征：封装 继承 多态

### 定义类
